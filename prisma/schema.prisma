generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id          String        @id @default(cuid())
  name        String?
  username  String?       @unique
  address     String        @unique
  phone      String?        @unique
  image       String?
  accounts    Account[]
  sessions    Session[]
  Transactions Transaction[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


model Transaction {
  id          String   @id @default(cuid())
  userId      String
  amount      Float
  token       String
  depositIndex    Int
  recipient String?
  amountInUSD Float
  claimed     Boolean  @default(false)
  claimedBy   String?
  createdAt   DateTime @default(now())
  claimedAt   DateTime?
  txId        String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}